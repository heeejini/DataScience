# -*- coding: utf-8 -*-
"""linear regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1901h7298GzI4GDYU9ZNuzKSUdHO_n7jN
"""

import numpy as np
import pandas as pd
import io
import warnings
warnings.filterwarnings(action='ignore')
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import GridSearchCV, KFold
from matplotlib import pyplot as plt
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
#import the data fie
#distance(meter). delivery time (minute)
df=pd.read_csv('/content/drive/MyDrive/data/linear_regression_data.csv', encoding='utf-8')
df.head()

X=df['Distance']
Y=df['Delivery Time']
#print(X)

X = X.values
y = Y.values
X=X.reshape(-1,1)
y=y.reshape(-1,1)

size = [0.2, 0.4]
#0.2 - 4/5 Split (Training: 4/5, Testing: 1/5)
#0.4 - 3/5 Split (Training: 3/5, Testing: 2/5)
for i in size :
  X_train, X_test, y_train, y_test = train_test_split(
      X, y, test_size=i, shuffle=True, stratify=None
  )

#train linear regression model
  model = LinearRegression()
  model.fit(X_train, y_train)

#prediction
  y_pred = model.predict(X_test)

#evaluation
  mse = mean_squared_error(y_test, y_pred)
  r2 = r2_score(y_test, y_pred)

  print("{} Split Results:".format(i))
  print("Mean Squared Error:", mse)
  print("R-squared Score:", r2)

  # Plot the linear regression line and scatter plot
  plt.scatter(X_test, y_test, color='blue')
  plt.plot(X_test, y_pred, color='red', linewidth=2, label="regression line")
  plt.xlabel('Distance')
  plt.ylabel('Delivery Time')
  plt.title('Linear Regression - {} Split'.format(i))
  plt.legend()
  plt.show()